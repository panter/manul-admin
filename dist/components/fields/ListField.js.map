{"version":3,"sources":["../../../src/components/fields/ListField.js"],"names":["List","children","initialCount","itemProps","label","name","value","props","id","map","item","index","cloneElement","child","key","replace","includeInChain"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,SAAPA,IAAO;AAAA,QACTC,QADS,QACTA,QADS;AAAA,QAETC,YAFS,QAETA,YAFS;AAAA,QAGTC,SAHS,QAGTA,SAHS;AAAA,QAITC,KAJS,QAITA,KAJS;AAAA,QAKTC,IALS,QAKTA,IALS;AAAA,QAMTC,KANS,QAMTA,KANS;AAAA,QAONC,KAPM;AAAA,WASX;AAAA;AAAQ,sCAAeA,KAAf,CAAR;AACGH,iBACD;AAAA;AAAA,cAAO,SAASG,MAAMC,EAAtB;AACGJ,iBADH;AAGE,oEAAc,MAASC,IAAT,OAAd,EAAiC,cAAcH,YAA/C;AAHF,SAFF;AASGD,mBACOK,MAAMG,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,mBACN,gBAASF,GAAT,CAAaR,QAAb,EAAuB;AAAA,uBACnB,gBAAMW,YAAN,CAAmBC,KAAnB,EAA0B;AACxBC,yBAAKH,KADmB;AAExBP,2BAAO,IAFiB;AAGxBC,0BAAM,wBAASA,IAAT,EAAeQ,MAAMN,KAAN,CAAYF,IAAZ,IAAoBQ,MAAMN,KAAN,CAAYF,IAAZ,CAAiBU,OAAjB,CAAyB,GAAzB,EAA8BJ,KAA9B,CAAnC;AAHkB,iBAA1B,CADmB;AAAA,aAAvB,CADM;AAAA,SAAV,CADP,GAWOL,MAAMG,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,mBACR,gFAAe,KAAKA,KAApB,EAA2B,OAAO,IAAlC,EAAwC,MAAM,wBAASN,IAAT,EAAeM,KAAf,CAA9C,IAAyER,SAAzE,EADQ;AAAA,SAAV;AApBV,KATW;AAAA,CAAb;;kBAoCe,4BAAaH,IAAb,EAAmB,EAAEgB,gBAAgB,KAAlB,EAAnB,C","file":"ListField.js","sourcesContent":["import React, { Children } from 'react';\nimport connectField from 'uniforms/connectField';\nimport filterDOMProps from 'uniforms/filterDOMProps';\nimport joinName from 'uniforms/joinName';\n\nimport ListAddField from './ListAddField';\nimport ListItemField from './ListItemField';\n\nconst List = ({\n    children,\n    initialCount,\n    itemProps,\n    label,\n    name,\n    value,\n    ...props\n}) =>\n  <ul {...filterDOMProps(props)}>\n    {label && (\n    <label htmlFor={props.id}>\n      {label}\n\n      <ListAddField name={`${name}.$`} initialCount={initialCount} />\n    </label>\n        )}\n\n    {children ? (\n            value.map((item, index) =>\n                Children.map(children, child =>\n                    React.cloneElement(child, {\n                      key: index,\n                      label: null,\n                      name: joinName(name, child.props.name && child.props.name.replace('$', index)),\n                    })\n                )\n            )\n        ) : (\n            value.map((item, index) =>\n              <ListItemField key={index} label={null} name={joinName(name, index)} {...itemProps} />\n            )\n        )}\n  </ul>\n;\n\nexport default connectField(List, { includeInChain: false });\n"]}