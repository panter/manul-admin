{"version":3,"sources":["../../../src/components/fields/NumField.js"],"names":["noneIfNaN","isNaN","x","undefined","Num","decimal","disabled","id","inputRef","label","max","min","name","onChange","placeholder","step","value","props","parseFloat","parseInt","event","target"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY;AAAA,SAAKC,MAAMC,CAAN,IAAWC,SAAX,GAAuBD,CAA5B;AAAA,CAAlB;;AAEA,IAAME,MAAM,SAANA,GAAM;AAAA,MACRC,OADQ,QACRA,OADQ;AAAA,MAERC,QAFQ,QAERA,QAFQ;AAAA,MAGRC,EAHQ,QAGRA,EAHQ;AAAA,MAIRC,QAJQ,QAIRA,QAJQ;AAAA,MAKRC,KALQ,QAKRA,KALQ;AAAA,MAMRC,GANQ,QAMRA,GANQ;AAAA,MAORC,GAPQ,QAORA,GAPQ;AAAA,MAQRC,IARQ,QAQRA,IARQ;AAAA,MASRC,SATQ,QASRA,QATQ;AAAA,MAURC,WAVQ,QAURA,WAVQ;AAAA,MAWRC,IAXQ,QAWRA,IAXQ;AAAA,MAYRC,KAZQ,QAYRA,KAZQ;AAAA,MAaLC,KAbK;AAAA,SAeV;AAAA;AAAS,kCAAeA,KAAf,CAAT;AACGR,aACD;AAAA;AAAA,QAAO,SAASF,EAAhB;AACGE;AADH,KAFF;AAOE;AACE,gBAAUH,QADZ;AAEE,UAAIC,EAFN;AAGE,WAAKG,GAHP;AAIE,WAAKC,GAJP;AAKE,YAAMC,IALR;AAME,gBAAU;AAAA,eAASC,UAASb,UAAU,CAACK,UAAUa,UAAV,GAAuBC,QAAxB,EAAkCC,MAAMC,MAAN,CAAaL,KAA/C,CAAV,CAAT,CAAT;AAAA,OANZ;AAOE,mBAAaF,WAPf;AAQE,WAAKN,QARP;AASE,YAAMO,SAASV,UAAU,IAAV,GAAiB,CAA1B,CATR;AAUE,YAAK,QAVP;AAWE,aAAOW;AAXT;AAPF,GAfU;AAAA,CAAZ;;kBAsCe,4BAAaZ,GAAb,C","file":"NumField.js","sourcesContent":["import React from 'react';\nimport connectField from 'uniforms/connectField';\nimport filterDOMProps from 'uniforms/filterDOMProps';\n\nconst noneIfNaN = x => isNaN(x) ? undefined : x;\n\nconst Num = ({\n    decimal,\n    disabled,\n    id,\n    inputRef,\n    label,\n    max,\n    min,\n    name,\n    onChange,\n    placeholder,\n    step,\n    value,\n    ...props\n}) =>\n  <div {...filterDOMProps(props)}>\n    {label && (\n    <label htmlFor={id}>\n      {label}\n    </label>\n        )}\n\n    <input\n      disabled={disabled}\n      id={id}\n      max={max}\n      min={min}\n      name={name}\n      onChange={event => onChange(noneIfNaN((decimal ? parseFloat : parseInt)(event.target.value)))}\n      placeholder={placeholder}\n      ref={inputRef}\n      step={step || (decimal ? 0.01 : 1)}\n      type=\"number\"\n      value={value}\n    />\n  </div>\n;\n\nexport default connectField(Num);\n"]}