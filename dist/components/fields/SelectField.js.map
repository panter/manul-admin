{"version":3,"sources":["../../../src/components/fields/SelectField.js"],"names":["xor","item","array","index","indexOf","concat","slice","renderCheckboxes","allowedValues","disabled","fieldType","id","name","onChange","transform","value","map","Array","includes","renderSelect","inputRef","label","placeholder","required","event","target","allowedValue","Select","checkboxes","props"],"mappings":"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","file":"SelectField.js","sourcesContent":["import React from 'react';\nimport connectField from 'uniforms/connectField';\nimport filterDOMProps from 'uniforms/filterDOMProps';\n\nconst xor = (item, array) => {\n  const index = array.indexOf(item);\n  if (index === -1) {\n    return array.concat([item]);\n  }\n\n  return array.slice(0, index).concat(array.slice(index + 1));\n};\n\nconst renderCheckboxes = ({ allowedValues, disabled, fieldType, id, name, onChange, transform, value }) =>\n    allowedValues.map(item =>\n      <div key={item}>\n        <input\n          checked={fieldType === Array ? value.includes(item) : value === item}\n          disabled={disabled}\n          id={`${id}-${item}`}\n          name={name}\n          onChange={() => onChange(fieldType === Array ? xor(item, value) : item)}\n          type=\"checkbox\"\n        />\n\n        <label htmlFor={`${id}-${item}`}>\n          {transform ? transform(item) : item}\n        </label>\n      </div>\n    )\n;\n\nconst renderSelect = ({\n    allowedValues,\n    disabled,\n    id,\n    inputRef,\n    label,\n    name,\n    onChange,\n    placeholder,\n    required,\n    transform,\n    value,\n}) =>\n  <select\n    disabled={disabled}\n    id={id}\n    name={name}\n    onChange={event => onChange(event.target.value)}\n    ref={inputRef}\n    value={value}\n  >\n    {(!!placeholder || !required) && (\n    <option value=\"\" disabled={required} hidden={required}>\n      {placeholder || label}\n    </option>\n        )}\n\n    {allowedValues.map(allowedValue =>\n      <option key={allowedValue} value={allowedValue}>\n        {transform ? transform(allowedValue) : allowedValue}\n      </option>\n        )}\n  </select>\n;\n\nconst Select = ({\n    allowedValues,\n    checkboxes,\n    disabled,\n    fieldType,\n    id,\n    inputRef,\n    label,\n    name,\n    onChange,\n    placeholder,\n    required,\n    transform,\n    value,\n    ...props\n}) =>\n  <div {...filterDOMProps(props)}>\n    {label && (\n    <label htmlFor={id}>\n      {label}\n    </label>\n        )}\n\n    {/* TODO: Better handling of these props. */}\n    {/* eslint-disable max-len */}\n    {checkboxes || fieldType === Array\n            ? renderCheckboxes({ allowedValues, disabled, id, name, onChange, transform, value, fieldType })\n            : renderSelect({ allowedValues, disabled, id, name, onChange, transform, value, inputRef, label, placeholder, required })\n        }\n    {/* eslint-enable */}\n  </div>\n;\n\nexport default connectField(Select);\n"]}