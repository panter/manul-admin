{"version":3,"sources":["../../../src/components/fields/TextField.js"],"names":["StyledTextArea","textarea","TextArea","disabled","id","inputRef","label","name","onChange","placeholder","value","rowCount","compProps","event","target","Text","props","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB,2BAAOC,QAAxB,iBAAN;;AAIA,IAAMC,WAAW,4BAAa;AAAA,MAC5BC,QAD4B,QAC5BA,QAD4B;AAAA,MAE5BC,EAF4B,QAE5BA,EAF4B;AAAA,MAG5BC,QAH4B,QAG5BA,QAH4B;AAAA,MAI5BC,KAJ4B,QAI5BA,KAJ4B;AAAA,MAK5BC,IAL4B,QAK5BA,IAL4B;AAAA,MAM5BC,SAN4B,QAM5BA,QAN4B;AAAA,MAO5BC,WAP4B,QAO5BA,WAP4B;AAAA,MAQ5BC,KAR4B,QAQ5BA,KAR4B;AAAA,MAS5BC,QAT4B,QAS5BA,QAT4B;AAAA,MAUzBC,SAVyB;AAAA,SAY5B;AAAA;AAAS,kCAAeA,SAAf,CAAT;AACKN,aACC;AAAA;AAAA,QAAO,SAASF,EAAhB;AACGE;AADH,KAFN;AAMI,kCAAC,cAAD;AACE,iBAAW,cADb;AAEE,gBAAUH,QAFZ;AAGE,UAAIC,EAHN;AAIE,YAAMG,IAJR;AAKE,gBAAU;AAAA,eAASC,UAASK,MAAMC,MAAN,CAAaJ,KAAtB,CAAT;AAAA,OALZ;AAME,mBAAaD,WANf;AAOE,WAAKJ,QAPP;AAQE,YAAMM,QARR;AASE,aAAOD;AATT;AANJ,GAZ4B;AAAA,CAAb,CAAjB;;AAgCA,IAAMK,OAAO,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,MAAMC,YAAY,CAACD,MAAML,QAAP,yBAEhBT,QAFF;;AAIA,SAAQ,8BAAC,SAAD,EAAec,KAAf,CAAR;AACD,CAND;;kBAQeD,I","file":"TextField.js","sourcesContent":["import React from 'react';\nimport BaseTextField from 'uniforms-bootstrap4/TextField';\nimport connectField from 'uniforms/connectField';\nimport filterDOMProps from 'uniforms/filterDOMProps';\nimport styled from 'styled-components';\n\nconst StyledTextArea = styled.textarea`\n  width: 100%;\n`;\n\nconst TextArea = connectField(({\n  disabled,\n  id,\n  inputRef,\n  label,\n  name,\n  onChange,\n  placeholder,\n  value,\n  rowCount,\n  ...compProps\n}) => (\n  <div {...filterDOMProps(compProps)}>\n      {label && (\n        <label htmlFor={id}>\n          {label}\n        </label>\n      )}\n      <StyledTextArea\n        className={'form-control'}\n        disabled={disabled}\n        id={id}\n        name={name}\n        onChange={event => onChange(event.target.value)}\n        placeholder={placeholder}\n        ref={inputRef}\n        rows={rowCount}\n        value={value}\n      />\n    </div>\n  ));\n\nconst Text = (props) => {\n  const Component = !props.rowCount ?\n    BaseTextField :\n    TextArea;\n\n  return (<Component {...props} />);\n};\n\nexport default Text;\n"]}