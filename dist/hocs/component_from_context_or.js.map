{"version":3,"sources":["../../src/hocs/component_from_context_or.js"],"names":["depsMapper","context","components","adminContext","componentName","DefaultComponent","props","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAGA;;;;AAIO,IAAMA,kCAAa,SAAbA,UAAa;AAAA,SAAY;AACpCC,aAAS;AAAA,aAAMA,QAAN;AAAA,KAD2B;AAEpCC,gBAAYD,SAAQE,YAAR,CAAqBD;AAFG,GAAZ;AAAA,CAAnB;;kBAKQ,UAACE,aAAD,EAAgBC,gBAAhB;AAAA,SAAqC,4BAClD,yBAAQL,UAAR,CADkD,EAElD,gBAA8B;AAAA,QAA3BE,UAA2B,QAA3BA,UAA2B;AAAA,QAAZI,KAAY;;AAC9B,QAAMC,YAAY,qBAChBF,gBADgB,EAEhBD,aAFgB,EAGhBF,UAHgB,CAAlB;AAKA,WAAO,8BAAC,SAAD,EAAeI,KAAf,CAAP;AACD,GATmD,CAArC;AAAA,C","file":"component_from_context_or.js","sourcesContent":["import { useDeps, composeAll } from 'mantra-core';\nimport React from 'react';\nimport { getOr } from 'lodash/fp';\n\n/**\n * helper that returns either the component from context.manulDraft\n * or one of the given default component\n**/\nexport const depsMapper = context => ({\n  context: () => context,\n  components: context.adminContext.components,\n});\n\nexport default (componentName, DefaultComponent) => composeAll(\n  useDeps(depsMapper),\n)(({ components, ...props }) => {\n  const Component = getOr(\n    DefaultComponent,\n    componentName,\n    components,\n  );\n  return <Component {...props} />;\n});\n"]}