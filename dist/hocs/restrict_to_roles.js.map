{"version":3,"sources":["../../src/hocs/restrict_to_roles.js"],"names":["rolesOnly","error","props","onData","context","Meteor","Roles","loggingIn","userIsInRole","userId","Error"],"mappings":";;;;;;AAAA;;kBAEe,UAACA,SAAD,EAAYC,KAAZ;AAAA,SAAsB,oCAAmB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAAA,yBAC/CD,MAAME,OAAN,EAD+C;AAAA,QACjEC,MADiE,kBACjEA,MADiE;AAAA,QACzDC,KADyD,kBACzDA,KADyD;;AAEzE,QAAI,CAACD,OAAOE,SAAP,EAAL,EAAyB;AACvB,UAAID,MAAME,YAAN,CAAmBH,OAAOI,MAAP,EAAnB,EAAoCT,SAApC,CAAJ,EAAoD;AAClDG,eAAO,IAAP,EAAaD,KAAb;AACD,OAFD,MAEO;AACLC,eAAO,IAAIO,KAAJ,CAAU,aAAV,CAAP;AACD;AACF;AACF,GAToC,EASlC,IATkC,EAS5BT,KAT4B,CAAtB;AAAA,C","file":"restrict_to_roles.js","sourcesContent":["import { composeWithTracker } from 'mantra-core';\n\nexport default (rolesOnly, error) => composeWithTracker((props, onData) => {\n  const { Meteor, Roles } = props.context();\n  if (!Meteor.loggingIn()) {\n    if (Roles.userIsInRole(Meteor.userId(), rolesOnly)) {\n      onData(null, props);\n    } else {\n      onData(new Error('not allowed'));\n    }\n  }\n}, null, error);\n"]}