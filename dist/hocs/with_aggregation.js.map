{"version":3,"sources":["../../src/hocs/with_aggregation.js"],"names":["composer","props","onData","aggregationName","aggregations","aggregation","Error","aggregate","aggregateComposer","aggregationProps","allAggregationProps","isAggregation","e","p","docsAggregated","docs","type"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;;;AAIO,IAAMA,WAAW,SAAXA,QAAW;AAAA,SAAM,UAC5BC,KAD4B,EACrBC,MADqB,EAEzB;AAAA,QACKC,eADL,GACuCF,KADvC,CACKE,eADL;AAAA,QACsBC,YADtB,GACuCH,KADvC,CACsBG,YADtB;;AAEH,QAAMC,cAAc,mBAAIF,eAAJ,EAAqBC,YAArB,CAApB;AACA,QAAI,CAACC,WAAL,EAAkB;AAChBH,aAAO,IAAII,KAAJ,yBAAgCH,eAAhC,CAAP;AACD,KAFD,MAEO;AAAA,UACGI,SADH,GACyDF,WADzD,CACGE,SADH;AAAA,UACcC,iBADd,GACyDH,WADzD,CACcG,iBADd;AAAA,UACoCC,gBADpC,0CACyDJ,WADzD;;AAEL,UAAMK,iDACDD,gBADC;AAEJE,uBAAe;AAFX,QAAN;AAIA,UAAIH,iBAAJ,EAAuB;AACrBA,0BAAkBP,KAAlB,EAAyB,UAACW,CAAD,EAAIC,CAAJ;AAAA,iBAAUX,OAAOU,CAAP,6BAAeF,mBAAf,EAAuCG,CAAvC,EAAV;AAAA,SAAzB;AACD,OAFD,MAEO,IAAIN,SAAJ,EAAe;AACpB,YAAMO,iBAAiBP,UAAUN,MAAMc,IAAhB,EAAsBd,KAAtB,CAAvB;AACAC,eAAO,IAAP;AACEa,gBAAMD;AADR,WAEKJ,mBAFL;AAID,OANM,MAMA;AACLR,eAAO,IAAII,KAAJ,CAAU,+CAAV,CAAP;AACD;AACF;AACF,GAzBuB;AAAA,CAAjB;;;;kBA4BQ;AAAA,SAAQ,yCAAmBN,SAASgB,IAAT,CAAnB,CAAR;AAAA,C","file":"with_aggregation.js","sourcesContent":["\nimport { composeWithTracker } from 'manul-mantra-core';\n\nimport { get } from 'lodash/fp';\n\nexport const composer = () => (\n  props, onData,\n) => {\n  const { aggregationName, aggregations } = props;\n  const aggregation = get(aggregationName)(aggregations);\n  if (!aggregation) {\n    onData(new Error(`unkown aggregation:${aggregationName}`));\n  } else {\n    const { aggregate, aggregateComposer, ...aggregationProps } = aggregation;\n    const allAggregationProps = {\n      ...aggregationProps,\n      isAggregation: true,\n    };\n    if (aggregateComposer) {\n      aggregateComposer(props, (e, p) => onData(e, { ...allAggregationProps, ...p }));\n    } else if (aggregate) {\n      const docsAggregated = aggregate(props.docs, props);\n      onData(null, {\n        docs: docsAggregated,\n        ...allAggregationProps,\n      });\n    } else {\n      onData(new Error('specify either aggregate or aggregateComposer'));\n    }\n  }\n};\n\n\nexport default type => composeWithTracker(composer(type));\n"]}