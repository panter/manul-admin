{"version":3,"sources":["../../src/hocs/with_collection_props.js"],"names":["composer","onData","context","collectionName","props","adminContext","SimpleSchema1","SimpleSchema","publicationUtils","config","require","default","error","Error","searchSchema","searchTerm","type","String","optional","collections","publications","getPublications","collection","schema","colConfig"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;;;AAIO,IAAMA,WAAW,SAAXA,QAAW;AAAA,SAAM,gBAAwCC,MAAxC,EAAmD;AAAA,QAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,QAAvCC,cAAuC,QAAvCA,cAAuC;AAAA,QAApBC,KAAoB;;AAAA,mBAK3EF,SAL2E;AAAA,yCAE7EG,YAF6E;AAAA,QAG7DC,aAH6D,yBAG3EC,YAH2E;AAAA,QAG9CC,gBAH8C,yBAG9CA,gBAH8C;AAAA,QAG5BC,MAH4B,yBAG5BA,MAH4B;;AAM/E,QAAIF,qBAAJ;AACA,QAAI;AACF;AACAA,qBAAeG,QAAQ,cAAR,EAAwBC,OAAvC;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACd;AACAL,qBAAeD,aAAf;AACD;AACD,QAAI,CAACC,YAAL,EAAmB;AACjBN,aAAO,IAAIY,KAAJ,CAAU,8DAAV,CAAP;AACD,KAFD,MAEO;AACL,UAAMC,eAAe,IAAIP,YAAJ,CAAiB;AACpCQ,oBAAY;AACVC,gBAAMC,MADI;AAEVC,oBAAU;AAFA;AADwB,OAAjB,CAArB;;AADK,UAQGC,WARH,GAQmBV,MARnB,CAQGU,WARH;;AASL,UAAMC,eAAeZ,iBAAiBa,eAAjB,CAAiClB,cAAjC,CAArB;AATK,kCAUwCgB,YAAYhB,cAAZ,CAVxC;AAAA,UAUGmB,UAVH,yBAUGA,UAVH;AAAA,UAUeC,MAVf,yBAUeA,MAVf;AAAA,UAU0BC,SAV1B;;AAWLvB,aAAO,IAAP;AACEqB,8BADF;AAEEC,gBAAQA,UAAU,sBAASD,UAAT,EAAqB,cAArB,CAFpB;AAGER,kCAHF;AAIEM;AAJF,SAKKI,SALL,EAMKpB,KANL;AAQD;AACF,GApCuB;AAAA,CAAjB;;;;kBAuCQ;AAAA,SAAQ,oCAAmBJ,SAASgB,IAAT,CAAnB,CAAR;AAAA,C","file":"with_collection_props.js","sourcesContent":["\nimport { composeWithTracker } from 'mantra-core';\nimport _ from 'lodash';\n\n\nexport const composer = () => ({ context, collectionName, ...props }, onData) => {\n  const {\n    adminContext: {\n      SimpleSchema: SimpleSchema1, publicationUtils, config,\n    },\n  } = context();\n  let SimpleSchema;\n  try {\n    /* eslint global-require: 0 */\n    SimpleSchema = require('simpl-schema').default;\n  } catch (error) {\n    // try to get from context\n    SimpleSchema = SimpleSchema1;\n  }\n  if (!SimpleSchema) {\n    onData(new Error('please provide SimpleSchema by npm or in context (version 1)'));\n  } else {\n    const searchSchema = new SimpleSchema({\n      searchTerm: {\n        type: String,\n        optional: true,\n      },\n    });\n\n    const { collections } = config;\n    const publications = publicationUtils.getPublications(collectionName);\n    const { collection, schema, ...colConfig } = collections[collectionName];\n    onData(null, {\n      collection,\n      schema: schema || _.result(collection, 'simpleSchema'),\n      searchSchema,\n      publications,\n      ...colConfig,\n      ...props, // allow override\n    });\n  }\n};\n\n\nexport default type => composeWithTracker(composer(type));\n"]}