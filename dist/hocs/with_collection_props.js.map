{"version":3,"sources":["../../src/hocs/with_collection_props.js"],"names":["composer","onData","context","collectionName","props","adminContext","SimpleSchema1","SimpleSchema","getComponent","publicationUtils","config","require","default","error","Error","searchSchema","searchTerm","type","String","optional","collections","publications","getPublications","collection","schema","colConfig","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAGO,IAAMA,WAAW,SAAXA,QAAW;AAAA,SAAQ,gBAE9BC,MAF8B,EAG3B;AAAA,QAFDC,OAEC,QAFDA,OAEC;AAAA,QAFQC,cAER,QAFQA,cAER;AAAA,QAF2BC,KAE3B;;AAAA,mBAQCF,SARD;AAAA,yCAEDG,YAFC;AAAA,QAGeC,aAHf,yBAGCC,YAHD;AAAA,QAICC,YAJD,yBAICA,YAJD;AAAA,QAKCC,gBALD,yBAKCA,gBALD;AAAA,QAMCC,MAND,yBAMCA,MAND;;AASH,QAAIH,qBAAJ;AACA,QAAI;AACF;AACAA,qBAAeI,QAAQ,cAAR,EAAwBC,OAAvC;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACd;AACAN,qBAAeD,aAAf;AACD;AACD,QAAI,CAACC,YAAL,EAAmB;AACjBN,aACE,IAAIa,KAAJ,CAAU,8DAAV,CADF;AAGD,KAJD,MAIO;AACL,UAAMC,eAAe,IAAIR,YAAJ,CAAiB;AACpCS,oBAAY;AACVC,gBAAMC,MADI;AAEVC,oBAAU;AAFA;AADwB,OAAjB,CAArB;;AADK,UAQGC,WARH,GAQmBV,MARnB,CAQGU,WARH;;AASL,UAAMC,eAAeZ,iBAAiBa,eAAjB,CAAiCnB,cAAjC,CAArB;AATK,kCAUwCiB,YAAYjB,cAAZ,CAVxC;AAAA,UAUGoB,UAVH,yBAUGA,UAVH;AAAA,UAUeC,MAVf,yBAUeA,MAVf;AAAA,UAU0BC,SAV1B;;AAWL,UAAMC,YAAYlB,aAAa,EAAEL,8BAAF,EAAkBc,UAAlB,EAAb,CAAlB;AACAhB,aAAO,IAAP;AACEyB,4BADF;AAEEH,8BAFF;AAGEC,gBAAQA,UAAU,sBAASD,UAAT,EAAqB,cAArB,CAHpB;AAIER,kCAJF;AAKEM;AALF,SAMKI,SANL,EAOKrB,KAPL;AASD;AACF,GA9CuB;AAAA,CAAjB;;;;kBAgDQ;AAAA,SAAQ,kCAAmBJ,SAASiB,IAAT,CAAnB,CAAR;AAAA,C","file":"with_collection_props.js","sourcesContent":["import composeWithTracker from '../utils/composeWithTracker';\nimport _ from 'lodash';\n\nexport const composer = type => (\n  { context, collectionName, ...props },\n  onData\n) => {\n  const {\n    adminContext: {\n      SimpleSchema: SimpleSchema1,\n      getComponent,\n      publicationUtils,\n      config\n    }\n  } = context();\n  let SimpleSchema;\n  try {\n    /* eslint global-require: 0 */\n    SimpleSchema = require('simpl-schema').default;\n  } catch (error) {\n    // try to get from context\n    SimpleSchema = SimpleSchema1;\n  }\n  if (!SimpleSchema) {\n    onData(\n      new Error('please provide SimpleSchema by npm or in context (version 1)')\n    );\n  } else {\n    const searchSchema = new SimpleSchema({\n      searchTerm: {\n        type: String,\n        optional: true\n      }\n    });\n\n    const { collections } = config;\n    const publications = publicationUtils.getPublications(collectionName);\n    const { collection, schema, ...colConfig } = collections[collectionName];\n    const Component = getComponent({ collectionName, type });\n    onData(null, {\n      Component,\n      collection,\n      schema: schema || _.result(collection, 'simpleSchema'),\n      searchSchema,\n      publications,\n      ...colConfig,\n      ...props // allow override\n    });\n  }\n};\n\nexport default type => composeWithTracker(composer(type));\n"]}