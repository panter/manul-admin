{"version":3,"sources":["../../src/hocs/with_collection_props.js"],"names":["composer","onData","context","collectionName","props","adminContext","SimpleSchema1","SimpleSchema","getComponent","publicationUtils","config","require","default","error","Error","searchSchema","searchTerm","type","String","optional","collections","publications","getPublications","collection","schema","colConfig","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;;;AAIO,IAAMA,WAAW,SAAXA,QAAW;AAAA,SAAQ,gBAAwCC,MAAxC,EAAmD;AAAA,QAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,QAAvCC,cAAuC,QAAvCA,cAAuC;AAAA,QAApBC,KAAoB;;AAAA,mBAK7EF,SAL6E;AAAA,yCAE/EG,YAF+E;AAAA,QAG/DC,aAH+D,yBAG7EC,YAH6E;AAAA,QAGhDC,YAHgD,yBAGhDA,YAHgD;AAAA,QAGlCC,gBAHkC,yBAGlCA,gBAHkC;AAAA,QAGhBC,MAHgB,yBAGhBA,MAHgB;;AAMjF,QAAIH,qBAAJ;AACA,QAAI;AACF;AACAA,qBAAeI,QAAQ,cAAR,EAAwBC,OAAvC;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACd;AACAN,qBAAeD,aAAf;AACD;AACD,QAAI,CAACC,YAAL,EAAmB;AACjBN,aAAO,IAAIa,KAAJ,CAAU,8DAAV,CAAP;AACD,KAFD,MAEO;AACL,UAAMC,eAAe,IAAIR,YAAJ,CAAiB;AACpCS,oBAAY;AACVC,gBAAMC,MADI;AAEVC,oBAAU;AAFA;AADwB,OAAjB,CAArB;;AADK,UAQGC,WARH,GAQmBV,MARnB,CAQGU,WARH;;AASL,UAAMC,eAAeZ,iBAAiBa,eAAjB,CAAiCnB,cAAjC,CAArB;AATK,kCAUwCiB,YAAYjB,cAAZ,CAVxC;AAAA,UAUGoB,UAVH,yBAUGA,UAVH;AAAA,UAUeC,MAVf,yBAUeA,MAVf;AAAA,UAU0BC,SAV1B;;AAWL,UAAMC,YAAYlB,aAAa,EAAEL,8BAAF,EAAkBc,UAAlB,EAAb,CAAlB;AACAhB,aAAO,IAAP;AACEyB,4BADF;AAEEH,8BAFF;AAGEC,gBAAQA,UAAU,sBAASD,UAAT,EAAqB,cAArB,CAHpB;AAIER,kCAJF;AAKEM;AALF,SAMKI,SANL,EAOKrB,KAPL,EAOY;AAPZ;AASD;AACF,GAtCuB;AAAA,CAAjB;;;;kBAyCQ;AAAA,SAAQ,yCAAmBJ,SAASiB,IAAT,CAAnB,CAAR;AAAA,C","file":"with_collection_props.js","sourcesContent":["\nimport { composeWithTracker } from 'manul-mantra-core';\nimport _ from 'lodash';\n\n\nexport const composer = type => ({ context, collectionName, ...props }, onData) => {\n  const {\n    adminContext: {\n      SimpleSchema: SimpleSchema1, getComponent, publicationUtils, config,\n    },\n  } = context();\n  let SimpleSchema;\n  try {\n    /* eslint global-require: 0 */\n    SimpleSchema = require('simpl-schema').default;\n  } catch (error) {\n    // try to get from context\n    SimpleSchema = SimpleSchema1;\n  }\n  if (!SimpleSchema) {\n    onData(new Error('please provide SimpleSchema by npm or in context (version 1)'));\n  } else {\n    const searchSchema = new SimpleSchema({\n      searchTerm: {\n        type: String,\n        optional: true,\n      },\n    });\n\n    const { collections } = config;\n    const publications = publicationUtils.getPublications(collectionName);\n    const { collection, schema, ...colConfig } = collections[collectionName];\n    const Component = getComponent({ collectionName, type });\n    onData(null, {\n      Component,\n      collection,\n      schema: schema || _.result(collection, 'simpleSchema'),\n      searchSchema,\n      publications,\n      ...colConfig,\n      ...props, // allow override\n    });\n  }\n};\n\n\nexport default type => composeWithTracker(composer(type));\n"]}