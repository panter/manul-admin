{"version":3,"sources":["../../src/initMethods/index.js"],"names":["initMethodsForCollection","context","collectionName","collectionConfig","update","create","destroy","list","listCount","METHODS","methods","config","collections","forEach"],"mappings":";;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAQA,IAAMA,2BAA2B,SAA3BA,wBAA2B,CAC/BC,OAD+B,EAE/BC,cAF+B,EAG/BC,gBAH+B;AAAA,SAI3B;AACJC,YAAQ,sBAAOH,OAAP,EAAgBC,cAAhB,EAAgCC,gBAAhC,CADJ;AAEJE,YAAQ,sBAAOJ,OAAP,EAAgBC,cAAhB,EAAgCC,gBAAhC,CAFJ;AAGJG,aAAS,uBAAQL,OAAR,EAAiBC,cAAjB,EAAiCC,gBAAjC,CAHL;AAIJI,UAAM,oBAAKN,OAAL,EAAcC,cAAd,EAA8BC,gBAA9B,CAJF;AAKJK,eAAW,yBAAUP,OAAV,EAAmBC,cAAnB,EAAmCC,gBAAnC;AALP,GAJ2B;AAAA,CAAjC;;AAYA,IAAIM,UAAU,IAAd;;kBACe,UAACR,OAAD,EAA8B;AAC3C;AACA;AACA,MAAI,CAACQ,OAAL,EAAc;AACZ,QAAMC,UAAU,EAAhB;AACA,wBAAYT,QAAQU,MAAR,CAAeC,WAA3B,EAAwCC,OAAxC,CAAgD,0BAAkB;AAChE,UAAMV,mBAAmBF,QAAQU,MAAR,CAAeC,WAAf,CAA2BV,cAA3B,CAAzB;;AAEAQ,cAAQR,cAAR,IAA0BF,yBACxBC,OADwB,EAExBC,cAFwB,EAGxBC,gBAHwB,CAA1B;AAKD,KARD;AASAM,cAAUC,OAAV;AACD;;AAED,SAAOD,OAAP;AACD,C","file":"index.js","sourcesContent":["// @flow\n\nimport update from './update';\nimport create from './create';\nimport destroy from './destroy';\nimport list from './list';\nimport listCount from './listCount';\n\nimport type {\n  MethodsContextT,\n  CollectionNameT,\n  CollectionConfigT\n} from '../types';\n\nconst initMethodsForCollection = (\n  context: MethodsContextT,\n  collectionName: CollectionNameT,\n  collectionConfig: CollectionConfigT\n) => ({\n  update: update(context, collectionName, collectionConfig),\n  create: create(context, collectionName, collectionConfig),\n  destroy: destroy(context, collectionName, collectionConfig),\n  list: list(context, collectionName, collectionConfig),\n  listCount: listCount(context, collectionName, collectionConfig)\n});\n\nlet METHODS = null;\nexport default (context: MethodsContextT) => {\n  // on server, this might get called twice atm (if you use SSR)\n  // so if already initialzed, do not initialize again\n  if (!METHODS) {\n    const methods = {};\n    Object.keys(context.config.collections).forEach(collectionName => {\n      const collectionConfig = context.config.collections[collectionName];\n\n      methods[collectionName] = initMethodsForCollection(\n        context,\n        collectionName,\n        collectionConfig\n      );\n    });\n    METHODS = methods;\n  }\n\n  return METHODS;\n};\n"]}