{"version":3,"sources":["../../src/initMethods/list.js"],"names":["Promise","Package","promise","context","collectionName","collectionConfig","ValidatedMethod","name","validate","validator","clean","run","listOptions","userId","Meteor","Error","isClient","docs","count","unblock","await"],"mappings":";;;;;;AAEA;;;;AAQA;;AAEA;;;;;;AAEA;AACA;IACQA,O,GAAYC,QAAQC,O,CAApBF,O;AACR;;kBAEe,UACbG,OADa,EAEbC,cAFa,EAGbC,gBAHa;AAAA,SAKb,IAAIF,QAAQG,eAAZ,CAA4B;AAC1BC,0BAAoBH,cAApB,UAD0B;AAE1BI,cAAU,oBAAWC,SAAX,CAAqB,EAAEC,OAAO,KAAT,EAArB,CAFgB;AAG1BC,OAH0B,eAGtBC,WAHsB,EAGK;AAC7B,UAAI,CAAC,0BAAUR,cAAV,EAA0B,KAAKS,MAA/B,CAAL,EAA6C;AAC3C,cAAM,IAAIV,QAAQW,MAAR,CAAeC,KAAnB,CAAyB,aAAzB,EAAwC,qBAAxC,CAAN;AACD;AACD,UAAIZ,QAAQW,MAAR,CAAeE,QAAnB,EAA6B;AAC3B,eAAO,EAAEC,MAAM,EAAR,EAAYC,OAAO,CAAnB,EAAP;AACD;AACD,WAAKC,OAAL;;AAP6B,2BASLnB,QAAQoB,KAAR,CACtB,6BAAc;AACZjB,wBADY;AAEZE,0CAFY;AAGZD,sCAHY;AAIZQ;AAJY,OAAd,CADsB,CATK;AAAA,UASrBK,IATqB,kBASrBA,IATqB;AAAA,UASfC,KATe,kBASfA,KATe;;AAkB7B,aAAO;AACLD,kBADK;AAELC;AAFK,OAAP;AAID;AAzByB,GAA5B,CALa;AAAA,C","file":"list.js","sourcesContent":["// @flow\n\nimport isAllowed from '../is_allowed';\n\nimport type {\n  MethodsContextT,\n  CollectionNameT,\n  CollectionConfigT,\n  ListOptionsT\n} from '../types';\nimport { ListSchema } from '../schemas';\n\nimport getListResult from './getListResult';\n\n// use Promise from meteor package\n/* global Package */\nconst { Promise } = Package.promise;\n// TODO: remove meteor from context and take it from Package\n\nexport default (\n  context: MethodsContextT,\n  collectionName: CollectionNameT,\n  collectionConfig: CollectionConfigT\n) =>\n  new context.ValidatedMethod({\n    name: `manulAdmin.${collectionName}.list`,\n    validate: ListSchema.validator({ clean: false }),\n    run(listOptions: ListOptionsT) {\n      if (!isAllowed(collectionName, this.userId)) {\n        throw new context.Meteor.Error('not allowed', 'You are not allowed');\n      }\n      if (context.Meteor.isClient) {\n        return { docs: [], count: 0 };\n      }\n      this.unblock();\n\n      const { docs, count } = Promise.await(\n        getListResult({\n          context,\n          collectionConfig,\n          collectionName,\n          listOptions\n        })\n      );\n\n      return {\n        docs,\n        count\n      };\n    }\n  });\n"]}