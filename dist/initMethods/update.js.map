{"version":3,"sources":["../../src/initMethods/update.js"],"names":["collectionName","collectionConfig","ValidatedMethod","Meteor","name","validate","collection","simpleSchema","extend","_id","type","String","validator","clean","run","doc","isServer","userId","Error","updated","update","$set","bypassCollection2"],"mappings":";;;;;;;;;;AAEA;;;;;;kBAQe,gBAEbA,cAFa,EAGbC,gBAHa;AAAA,MACXC,eADW,QACXA,eADW;AAAA,MACMC,MADN,QACMA,MADN;AAAA,SAKb,IAAID,eAAJ,CAAoB;AAClBE,0BAAoBJ,cAApB,YADkB;AAElBK,cAAUJ,iBAAiBK,UAAjB,CACPC,YADO,GAEPC,MAFO,CAEA;AACNC,WAAK,EAAEC,MAAMC,MAAR;AADC,KAFA,EAKPC,SALO,CAKG,EAAEC,OAAO,IAAT,EALH,CAFQ;AAQlBC,OARkB,sBAQG;AAAA,UAAfL,GAAe,SAAfA,GAAe;AAAA,UAAPM,GAAO;;AACnB;AACA,UAAIZ,OAAOa,QAAX,EAAqB;AACnB,YAAI,CAAC,0BAAUhB,cAAV,EAA0B,KAAKiB,MAA/B,CAAL,EAA6C;AAC3C,gBAAM,IAAId,OAAOe,KAAX,CAAiB,aAAjB,EAAgC,qBAAhC,CAAN;AACD;;AAED;AACA;AACA;AACA,YAAMC,UAAUlB,iBAAiBK,UAAjB,CAA4Bc,MAA5B,CACdX,GADc,EAEd,EAAEY,MAAMN,GAAR,EAFc,EAGd,EAAEO,mBAAmB,IAArB,EAHc,CAAhB;AAKA,YAAIH,YAAY,CAAhB,EAAmB;AACjB,gBAAM,IAAIhB,OAAOe,KAAX,CAAiB,WAAjB,EAA8B,iBAA9B,CAAN;AACD;AACF;AACF;AA3BiB,GAApB,CALa;AAAA,C","file":"update.js","sourcesContent":["// @flow\n\nimport isAllowed from '../is_allowed';\n\nimport type {\n  MethodsContextT,\n  CollectionNameT,\n  CollectionConfigT\n} from '../types';\n\nexport default (\n  { ValidatedMethod, Meteor }: MethodsContextT,\n  collectionName: CollectionNameT,\n  collectionConfig: CollectionConfigT\n) =>\n  new ValidatedMethod({\n    name: `manulAdmin.${collectionName}.update`,\n    validate: collectionConfig.collection\n      .simpleSchema()\n      .extend({\n        _id: { type: String }\n      })\n      .validator({ clean: true }),\n    run({ _id, ...doc }) {\n      // console.log('updating', collectionName, _id, doc);\n      if (Meteor.isServer) {\n        if (!isAllowed(collectionName, this.userId)) {\n          throw new Meteor.Error('not allowed', 'You are not allowed');\n        }\n\n        // Whole-doc update is not supported by simpl-schema,\n        // as workaround we use bypassCollection2: true\n        // https://github.com/aldeed/meteor-simple-schema/issues/175\n        const updated = collectionConfig.collection.update(\n          _id,\n          { $set: doc },\n          { bypassCollection2: true }\n        );\n        if (updated === 0) {\n          throw new Meteor.Error('not found', 'Entry not found');\n        }\n      }\n    }\n  });\n"]}