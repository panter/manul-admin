{"version":3,"sources":["../src/routes.jsx"],"names":["composers","injectDeps","adminContext","adminRoutes","config","route","name","action","content","createRoute","type","collectionName","aggregationName","Container","getRoute","path","params","collections","forEach","aggregations"],"mappings":";;;;;;;;;;;;;;;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;IAAYA,S;;;;;;AAEZ;kBACe,UAACC,UAAD,QAAkC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAAA,MACvCC,WADuC,GACfD,YADe,CACvCC,WADuC;AAAA,MAC1BC,MAD0B,GACfF,YADe,CAC1BE,MAD0B;;;AAG/CD,cAAYE,KAAZ,CAAkB,GAAlB,EAAuB;AACrBC,UAAM,aADe;AAErBC,UAFqB,oBAEZ;AACP,+BAAMN,4BAAN,EAA0B;AACxBO,iBAAS;AAAA,iBACP,yDADO;AAAA;AADe,OAA1B;AAKD;AARoB,GAAvB;;AAWA,MAAMC,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAOC,cAAP,EAAkD;AAAA,QAA3BC,eAA2B,uEAAT,IAAS;;AACpE,QAAMC,YAAYb,UAAU,0BAAWU,IAAX,CAAV,CAAlB;;AADoE,+BAE7C,sBAAWI,QAAX,CAAoBJ,IAApB,EAA0BC,cAA1B,EAA0CC,eAA1C,CAF6C;AAAA,QAE5DG,IAF4D,wBAE5DA,IAF4D;AAAA,QAEtDT,IAFsD,wBAEtDA,IAFsD;;AAGpEH,gBAAYE,KAAZ,CAAkBU,IAAlB,EAAwB;AACtBT,gBADsB;AAEtBC,YAFsB,kBAEfS,MAFe,EAEP;AACb,iCAAMf,4BAAN,EAA0B;AACxBO,mBAAS;AAAA,mBACP,8BAAC,SAAD;AACE,8BAAgBG,cADlB;AAEE,+BAAiBC,eAFnB;AAGE,oBAAMF,IAHR;AAIE,sBAAQM;AAJV,cADO;AAAA;AADe,SAA1B;AAUD;AAbqB,KAAxB;AAeD,GAlBD;AAmBA,sBAAYZ,OAAOa,WAAnB,EAAgCC,OAAhC,CAAwC,UAACP,cAAD,EAAoB;AAC1D,KAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,EAA2BO,OAA3B,CAAmC,UAACR,IAAD,EAAU;AAC3CD,kBAAYC,IAAZ,EAAkBC,cAAlB;AACD,KAFD;AAD0D,QAIlDQ,YAJkD,GAIjCf,OAAOa,WAAP,CAAmBN,cAAnB,CAJiC,CAIlDQ,YAJkD;;AAK1D,QAAI,CAAC,uBAAQA,YAAR,CAAL,EAA4B;AAC1B,0BAAYA,YAAZ,EAA0BD,OAA1B,CAAkC,UAACN,eAAD,EAAqB;AACrDH,oBAAY,iBAAZ,EAA+BE,cAA/B,EAA+CC,eAA/C;AACD,OAFD;AAGD;AACF,GAVD;AAWD,C","file":"routes.js","sourcesContent":["import { isEmpty, upperFirst } from 'lodash/fp';\nimport React from 'react';\nimport { mount } from 'react-mounter';\nimport routeUtils from './utils/route_utils';\nimport Layout from './containers/layout';\nimport Home from './containers/admin_home';\n\nimport * as composers from './containers/composers';\n\n/* eslint react/display-name: 0*/\nexport default (injectDeps, { adminContext }) => {\n  const { adminRoutes, config } = adminContext;\n\n  adminRoutes.route('/', {\n    name: 'admin.index',\n    action() {\n      mount(injectDeps(Layout), {\n        content: () => (\n          <Home />\n        ),\n      });\n    },\n  });\n\n  const createRoute = (type, collectionName, aggregationName = null) => {\n    const Container = composers[upperFirst(type)];\n    const { path, name } = routeUtils.getRoute(type, collectionName, aggregationName);\n    adminRoutes.route(path, {\n      name,\n      action(params) {\n        mount(injectDeps(Layout), {\n          content: () => (\n            <Container\n              collectionName={collectionName}\n              aggregationName={aggregationName}\n              type={type}\n              params={params}\n            />\n            ),\n        });\n      },\n    });\n  };\n  Object.keys(config.collections).forEach((collectionName) => {\n    ['create', 'list', 'edit'].forEach((type) => {\n      createRoute(type, collectionName);\n    });\n    const { aggregations } = config.collections[collectionName];\n    if (!isEmpty(aggregations)) {\n      Object.keys(aggregations).forEach((aggregationName) => {\n        createRoute('listAggregation', collectionName, aggregationName);\n      });\n    }\n  });\n};\n"]}