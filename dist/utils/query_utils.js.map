{"version":3,"sources":["../../src/utils/query_utils.js"],"names":["removeEmptyObjects","o","queryListFromTerm","term","transform","field","RegExp","queryForTerm","$or","fields","termToTermList","match","map","k","replace","createSearchQuery","terms","$and","filterToQuery","filter","search","transformFilter","f","query","searchFields","searchTerm","sortPropsToMongoSort","sortAscending","pagePropertiesToLimitAndSkip","currentPage","pageSize","limit","skip","gridOptionsToQueryOptions","sortProperties","pageProperties","sort","limitAndSkip"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAMA,qBAAqB,sBAAO;AAAA,SAAK,wBAASC,CAAT,KAAe,uBAAQA,CAAR,CAApB;AAAA,CAAP,CAA3B;;AAEA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,SAAP;AAAA,SACxB,oBACE,mBAAI;AAAA,6CACDC,KADC,EACO,IAAIC,MAAJ,OAAeF,UAAUD,IAAV,CAAf,CADP;AAAA,GAAJ,CADF,CADwB;AAAA,CAA1B;AAMA;AACA,IAAMI,eAAe,SAAfA,YAAe;AAAA,SAAQ;AAAA,WAAW;AACtCC,sDACKN,kBAAkBC,IAAlB,sBAAkCM,MAAlC,CADL,oCAEKP,kBAAkBC,IAAlB,wBAAoCM,MAApC,CAFL;AADsC,KAAX;AAAA,GAAR;AAAA,CAArB;AAMA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SACrBP,KACGQ,KADH,CACS,sBADT,EAEGC,GAFH,CAEO;AAAA,WAAKC,EAAEC,OAAF,CAAU,IAAV,EAAgB,EAAhB,CAAL;AAAA,GAFP,EAGGF,GAHH,gBADqB;AAAA,CAAvB;AAKO,IAAMG,gDAAoB,SAApBA,iBAAoB,CAACN,MAAD,EAASO,KAAT;AAAA,SAAoB;AACnDC,UAAM,mBAAI;AAAA,aAAQV,aAAaJ,IAAb,EAAmBM,MAAnB,CAAR;AAAA,KAAJ,EAAwCO,KAAxC;AAD6C,GAApB;AAAA,CAA1B;AAGP;AACO,IAAME,wCAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAASC,MAAT,EAA8C;AAAA,MAA7BC,eAA6B,uEAAX;AAAA,WAAKC,CAAL;AAAA,GAAW;;AACzE;AACA;;AAEA;AACA,MAAMC,mCACA,CAAC,uBAAQJ,MAAR,CAAD,IAAoBnB,mBAAmBqB,gBAAgBF,MAAhB,CAAnB,CADpB,EAEA,CAAC,uBAAQC,MAAR,CAAD,IACF,CAAC,uBAAQA,OAAOI,YAAf,CADC,IAEF,CAAC,uBAAQJ,OAAOK,UAAf,CAFC,IAGFV,kBAAkBK,OAAOI,YAAzB,EAAuCd,eAAeU,OAAOK,UAAtB,CAAvC,CALE,CAAN;AAOA,SAAOF,KAAP;AACD,CAbM;;AAeA,IAAMG,sDAAuB,oBAClC,qBAAM,IAAN,CADkC,EAElC,yBAAU;AAAA,MAAGC,aAAH,SAAGA,aAAH;AAAA,SAAwBA,gBAAgB,CAAhB,GAAoB,CAAC,CAA7C;AAAA,CAAV,CAFkC,CAA7B;;AAKP,IAAMC,+BAA+B,SAA/BA,4BAA+B;AAAA,kFACP,EAAEC,aAAa,CAAf,EAAkBC,UAAU,EAA5B,EADO;AAAA,MACjCD,WADiC,SACjCA,WADiC;AAAA,MACpBC,QADoB,SACpBA,QADoB;;AAAA,SAE/B;AACJC,WAAOD,QADH;AAEJE,UAAM,CAACH,cAAc,CAAf,IAAoBC;AAFtB,GAF+B;AAAA,CAArC;;AAOO,IAAMG,gEAA4B,SAA5BA,yBAA4B,QAGnC;AAAA,MAFJC,cAEI,SAFJA,cAEI;AAAA,mCADJC,cACI;AAAA,MADJA,cACI,wCADa,IACb;;AACJ;AACA,MAAMC,OAAOV,qBAAqBQ,cAArB,CAAb;AACA;;AAEA,MAAMG,eAAeF,iBACjBP,6BAA6BO,cAA7B,CADiB,GAEjB,IAFJ;AAGA;AACEC;AADF,KAEKC,YAFL;AAID,CAfM","file":"query_utils.js","sourcesContent":["import {\n  identity,\n  capitalize,\n  omitBy,\n  map,\n  isObject,\n  mapValues,\n  keyBy,\n  isEmpty,\n  flow,\n  split,\n  trim\n} from 'lodash/fp';\n\nconst removeEmptyObjects = omitBy(o => isObject(o) && isEmpty(o));\n\nconst queryListFromTerm = (term, transform) =>\n  flow(\n    map(field => ({\n      [field]: new RegExp(`^${transform(term)}`)\n    }))\n  );\n// using case-insensitive regex makes it slow, so we do a little hack\nconst queryForTerm = term => fields => ({\n  $or: [\n    ...queryListFromTerm(term, identity)(fields),\n    ...queryListFromTerm(term, capitalize)(fields)\n  ]\n});\nconst termToTermList = term =>\n  term\n    .match(/\\w+|\"(?:\\\\\"|[^\"])+\"/g)\n    .map(k => k.replace(/\"/g, ''))\n    .map(trim);\nexport const createSearchQuery = (fields, terms) => ({\n  $and: map(term => queryForTerm(term)(fields))(terms)\n});\n/* eslint import/prefer-default-export: 0 */\nexport const filterToQuery = (filter, search, transformFilter = f => f) => {\n  // console.log('got filter', filter);\n  // console.log('got search', search);\n\n  // remove empty objects on filter\n  const query = {\n    ...(!isEmpty(filter) && removeEmptyObjects(transformFilter(filter))),\n    ...(!isEmpty(search) &&\n      !isEmpty(search.searchFields) &&\n      !isEmpty(search.searchTerm) &&\n      createSearchQuery(search.searchFields, termToTermList(search.searchTerm)))\n  };\n  return query;\n};\n\nexport const sortPropsToMongoSort = flow(\n  keyBy('id'),\n  mapValues(({ sortAscending }) => (sortAscending ? 1 : -1))\n);\n\nconst pagePropertiesToLimitAndSkip = (\n  { currentPage, pageSize } = { currentPage: 1, pageSize: 50 }\n) => ({\n  limit: pageSize,\n  skip: (currentPage - 1) * pageSize\n});\n\nexport const gridOptionsToQueryOptions = ({\n  sortProperties,\n  pageProperties = null\n}) => {\n  // console.log('got sortProperties', sortProperties);\n  const sort = sortPropsToMongoSort(sortProperties);\n  // console.log('mongo sort', sort);\n\n  const limitAndSkip = pageProperties\n    ? pagePropertiesToLimitAndSkip(pageProperties)\n    : null;\n  return {\n    sort,\n    ...limitAndSkip\n  };\n};\n"]}